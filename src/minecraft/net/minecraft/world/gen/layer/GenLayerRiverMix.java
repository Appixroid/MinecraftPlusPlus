package net.minecraft.world.gen.layer;

import net.minecraft.init.Biomes;
import net.minecraft.world.biome.Biome;

public class GenLayerRiverMix extends GenLayer
{
	private final GenLayer biomePatternGeneratorChain;
	private final GenLayer riverPatternGeneratorChain;

	public GenLayerRiverMix(long p_i2129_1_, GenLayer p_i2129_3_, GenLayer p_i2129_4_)
	{
		super(p_i2129_1_);
		this.biomePatternGeneratorChain = p_i2129_3_;
		this.riverPatternGeneratorChain = p_i2129_4_;
	}

	/**
	 * Initialize layer's local worldGenSeed based on its own baseSeed and the
	 * world's global seed (passed in as an argument).
	 */
	@Override
	public void initWorldGenSeed(long seed)
	{
		this.biomePatternGeneratorChain.initWorldGenSeed(seed);
		this.riverPatternGeneratorChain.initWorldGenSeed(seed);
		super.initWorldGenSeed(seed);
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be
	 * interpreted as temperatures, rainfall amounts, or biomeList[] indices
	 * based on the particular GenLayer subclass.
	 */
	@Override
	public int[] getInts(int areaX, int areaY, int areaWidth, int areaHeight)
	{
		int[] aint = this.biomePatternGeneratorChain.getInts(areaX, areaY, areaWidth, areaHeight);
		int[] aint1 = this.riverPatternGeneratorChain.getInts(areaX, areaY, areaWidth, areaHeight);
		int[] result = IntCache.getIntCache(areaWidth * areaHeight);

		for (int i = 0; i < areaWidth * areaHeight; ++i)
		{
			if (aint[i] == Biome.getIdForBiome(Biomes.getBiome(Biomes.OCEAN)) || aint[i] == Biome.getIdForBiome(Biomes.getBiome(Biomes.DEEP_OCEAN)) || aint1[i] != Biome.getIdForBiome(Biomes.getBiome(Biomes.RIVER)))
			{
				result[i] = aint[i];
			}
			else
			{
				if (aint[i] == Biome.getIdForBiome(Biomes.getBiome(Biomes.ICE_PLAINS)))
				{
					result[i] = Biome.getIdForBiome(Biomes.getBiome(Biomes.FROZEN_RIVER));
				}
				else if (aint[i] != Biome.getIdForBiome(Biomes.getBiome(Biomes.MUSHROOM_ISLAND)) && aint[i] != Biome.getIdForBiome(Biomes.getBiome(Biomes.MUSHROOM_ISLAND_SHORE)))
				{
					result[i] = aint1[i] & 255;
				}
				else
				{
					result[i] = Biome.getIdForBiome(Biomes.getBiome(Biomes.MUSHROOM_ISLAND_SHORE));
				}
			}
		}

		return result;
	}
}
